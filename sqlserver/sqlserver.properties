connector.name=sqlserver

# Connection details
connection-url=jdbc:sqlserver://<host>:<port>;databaseName=<databaseName>;encrypt=false
connection-user=root
connection-password=secret

# Unsupported data type handling
unsupported-type-handling=CONVER_TO_VARCHAR
jdbc.mapped-types-as-varchar=GEOMETRY,GEOGRAPHY

# Case sensitivity considerations
case-insensitive-name-matching=true
case-insensitive-name-matching.cache-ttl=20m

# Metadata caching 
# Make sure that metadata cache exceeds your batch job window to avoid metadata refresh during DDL operations, prevent deadlocks 
metadata.cache-ttl=60m
metadata.schemas.cache-ttl=1h
metadata.tables.cache-ttl=30m
managed-statistics.cache-maximum-size=10000
metadata.statistics.cache-ttl=1h
metadata.cache-missing=true

#Statistics collection 
statistics.enabled=true

#If enabling Managed Statistics, you can optionally configure the following:
# starburst.managed-statistics.enabled=true
# managed-statistics.enabled=true 
# managed-statistics.cache-ttl=6h 
# managed-statistics.cache-maximum-size=10000

# Performance optimization parameters
# Adjust as necessary. The maximum number of connections is automatically limited to the number of partitions in the table; if this number is set higher, it is ignored, and the number of partitions used instead.
sqlserver.parallel.connections-count = 10

#Bulk Operations:
sqlserver.bulk-copy-for-write.enabled=true
sqlserver.bulk-copy-for-write.lock-destination-table=true

# # Non-transactional inserts - for faster inserts, but may result in duplicates in case of retries
# insert.non-transactional-insert.enabled=true

#Enable bulk inserts for write heavy workloads
# sqlserver.bulk-copy-for-write.enabled=true
# sqlserver.bulk-copy-for-write.lock-destination-table=true

# Disable Snapshot Isolation if your SQL Server does not support snapshot isolation. This is true by default
# sqlserver.snapshot-isolation.disabled=false


#Join Pushdown:
join-pushdown.enabled=true
join-pushdown.strategy=EAGER

#Dynamic FIltering
dynamic-filtering.enabled=true
# For interactive queries, reduce to 5-10 seconds to minimize latency.
# For analytical workloads, increase to 30-60 seconds to maximize filtering effectiveness
dynamic-filtering.wait-timeout=20s

#Domain Compaction
domain-compaction-threshold=64

